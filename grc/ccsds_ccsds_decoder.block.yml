# auto-generated by grc.converter

id: ccsds_ccsds_decoder
label: CCSDS Decoder
category: ccsds

parameters:
-   id: threshold
    label: Threshold
    dtype: int
    default: '0'
-   id: rs_decode
    label: RS Decode
    dtype: enum
    default: 'True'
    options: ['True', 'False']
    option_labels: ['Yes', 'No']
-   id: dual_basis
    label: Dual Basis
    dtype: enum
    default: 'True'
    options: ['True', 'False']
    option_labels: ['Yes', 'No']
-   id: deinterleave
    label: Deinterleave
    dtype: enum
    default: 'True'
    options: ['True', 'False']
    option_labels: ['Yes', 'No']
-   id: descramble
    label: Descramble
    dtype: enum
    default: 'True'
    options: ['True', 'False']
    option_labels: ['Yes', 'No']
-   id: printing
    label: Print packets
    dtype: enum
    default: 'False'
    options: ['True', 'False']
    option_labels: ['Yes', 'No']
    hide: part
-   id: verbose
    label: Verbose
    dtype: enum
    default: 'False'
    options: ['True', 'False']
    option_labels: ['Yes', 'No']
    hide: part
-   id: n_deinterleave
    label: Deinterleave Count
    dtype: int
    default: '5'

inputs:
-   domain: stream
    dtype: byte

outputs:
-   domain: message
    id: out
    optional: true
asserts:
- ${ (n_deinterleave > 0) and (n_deinterleave < 9) }

templates:
    imports: import ccsds
    make: ccsds.ccsds_decoder(${threshold}, ${rs_decode}, ${deinterleave}, ${descramble},
        ${verbose}, ${printing}, ${n_deinterleave}, ${dual_basis})

file_format: 1
